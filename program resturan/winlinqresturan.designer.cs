#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace program_resturan
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="resturan")]
	public partial class winlinqresturanDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTableregister(Tableregister instance);
    partial void UpdateTableregister(Tableregister instance);
    partial void DeleteTableregister(Tableregister instance);
    partial void InsertTableinsertfood(Tableinsertfood instance);
    partial void UpdateTableinsertfood(Tableinsertfood instance);
    partial void DeleteTableinsertfood(Tableinsertfood instance);
    partial void InsertTableinsertlabel(Tableinsertlabel instance);
    partial void UpdateTableinsertlabel(Tableinsertlabel instance);
    partial void DeleteTableinsertlabel(Tableinsertlabel instance);
    #endregion
		
		public winlinqresturanDataContext() : 
				base(global::program_resturan.Properties.Settings.Default.resturanConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public winlinqresturanDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public winlinqresturanDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public winlinqresturanDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public winlinqresturanDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Tableregister> Tableregisters
		{
			get
			{
				return this.GetTable<Tableregister>();
			}
		}
		
		public System.Data.Linq.Table<Tableinsertfood> Tableinsertfoods
		{
			get
			{
				return this.GetTable<Tableinsertfood>();
			}
		}
		
		public System.Data.Linq.Table<Tableinsertlabel> Tableinsertlabels
		{
			get
			{
				return this.GetTable<Tableinsertlabel>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tableregister")]
	public partial class Tableregister : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _subscription;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _tel;
		
		private string _mobile;
		
		private string _addres;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsubscriptionChanging(int value);
    partial void OnsubscriptionChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    partial void OnmobileChanging(string value);
    partial void OnmobileChanged();
    partial void OnaddresChanging(string value);
    partial void OnaddresChanged();
    #endregion
		
		public Tableregister()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subscription", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int subscription
		{
			get
			{
				return this._subscription;
			}
			set
			{
				if ((this._subscription != value))
				{
					this.OnsubscriptionChanging(value);
					this.SendPropertyChanging();
					this._subscription = value;
					this.SendPropertyChanged("subscription");
					this.OnsubscriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="NVarChar(50)")]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="NVarChar(50)")]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="NVarChar(50)")]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile", DbType="NVarChar(50)")]
		public string mobile
		{
			get
			{
				return this._mobile;
			}
			set
			{
				if ((this._mobile != value))
				{
					this.OnmobileChanging(value);
					this.SendPropertyChanging();
					this._mobile = value;
					this.SendPropertyChanged("mobile");
					this.OnmobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addres", DbType="NVarChar(MAX)")]
		public string addres
		{
			get
			{
				return this._addres;
			}
			set
			{
				if ((this._addres != value))
				{
					this.OnaddresChanging(value);
					this.SendPropertyChanging();
					this._addres = value;
					this.SendPropertyChanged("addres");
					this.OnaddresChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tableinsertfood")]
	public partial class Tableinsertfood : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _code;
		
		private string _namefood;
		
		private System.Nullable<int> _typefood;
		
		private string _fee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodeChanging(int value);
    partial void OncodeChanged();
    partial void OnnamefoodChanging(string value);
    partial void OnnamefoodChanged();
    partial void OntypefoodChanging(System.Nullable<int> value);
    partial void OntypefoodChanged();
    partial void OnfeeChanging(string value);
    partial void OnfeeChanged();
    #endregion
		
		public Tableinsertfood()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_namefood", DbType="NVarChar(50)")]
		public string namefood
		{
			get
			{
				return this._namefood;
			}
			set
			{
				if ((this._namefood != value))
				{
					this.OnnamefoodChanging(value);
					this.SendPropertyChanging();
					this._namefood = value;
					this.SendPropertyChanged("namefood");
					this.OnnamefoodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typefood", DbType="Int")]
		public System.Nullable<int> typefood
		{
			get
			{
				return this._typefood;
			}
			set
			{
				if ((this._typefood != value))
				{
					this.OntypefoodChanging(value);
					this.SendPropertyChanging();
					this._typefood = value;
					this.SendPropertyChanged("typefood");
					this.OntypefoodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fee", DbType="NVarChar(50)")]
		public string fee
		{
			get
			{
				return this._fee;
			}
			set
			{
				if ((this._fee != value))
				{
					this.OnfeeChanging(value);
					this.SendPropertyChanging();
					this._fee = value;
					this.SendPropertyChanged("fee");
					this.OnfeeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tableinsertlabel")]
	public partial class Tableinsertlabel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _name;
		
		private int _id;
		
		private string _adres;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnadresChanging(string value);
    partial void OnadresChanged();
    #endregion
		
		public Tableinsertlabel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(30)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adres", DbType="NVarChar(100)")]
		public string adres
		{
			get
			{
				return this._adres;
			}
			set
			{
				if ((this._adres != value))
				{
					this.OnadresChanging(value);
					this.SendPropertyChanging();
					this._adres = value;
					this.SendPropertyChanged("adres");
					this.OnadresChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
